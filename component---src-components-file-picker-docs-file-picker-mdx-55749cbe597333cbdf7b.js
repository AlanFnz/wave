(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{u67H:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return m})),n.d(t,"default",(function(){return g}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk");var o=n("/FXl"),a=n("TjRS"),l=n("ZFoC"),i=n("xnqT"),r=n("ajo3"),c=n("hWRK"),s=n("jWjX"),p=n("6Wd4"),b=n("6rkh");n("aD51");function u(){return(u=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e}).apply(this,arguments)}var m={};void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!m.hasOwnProperty("__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/FilePicker/docs/FilePicker.mdx"}});var h={_frontmatter:m},d=a.a;function g(e){var t,n,g=e.components,f=function(e,t){if(null==e)return{};var n,o,a={},l=Object.keys(e);for(o=0;o<l.length;o++)n=l[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,["components"]);return Object(o.b)(d,u({},h,f,{components:g,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"filepicker"},"FilePicker"),Object(o.b)("p",null,"This component itâ€™s a trigger opening the native file uploader.\nThis component uses default Web input type file check ",Object(o.b)("a",u({parentName:"p"},{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file"}),"Mozilla Input Docs"),"\nif you need to know more about the supported attributes and values"),Object(o.b)("h2",{id:"properties"},"Properties"),Object(o.b)(b.a,{mdxType:"FilePickerPropsTable"}),Object(o.b)("br",null),Object(o.b)(i.a,{component:"FilePicker",supportedProps:["margin"],mdxType:"StyledSystemLinks"}),Object(o.b)("h2",{id:"appearance"},"Appearance"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"File title"),": This provides a clear description of what the user should upload. If long, takes as many lines as needed extending the height of the component."),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"Button label"),": Describes the main action, it works better when short"),Object(o.b)("li",{parentName:"ul"},"It is recommended to place this component together with a helper text to provide additional help for what's expected. Helper text should only appear if the user open the file explorer and doesn't select anything.")),Object(o.b)("h2",{id:"placement"},"Placement"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"They are mainly used in forms but can also appear in other places as a stand alone component, like item or user registration screens."),Object(o.b)("li",{parentName:"ul"},"It should be placed with a minimum of 8px ",Object(o.b)("em",{parentName:"li"},'("Spaces" value 1 for our default spaces values)')," margin on each side"),Object(o.b)("li",{parentName:"ul"},"It should be placed vertically aligned")),Object(o.b)("h2",{id:"behaviour"},"Behaviour"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"The user may select 1 file at a time."),Object(o.b)("li",{parentName:"ul"},"By default, any file format is accepted, but you can add parameters to validate a specific file format."),Object(o.b)("li",{parentName:"ul"},"The action of clicking Browse file will trigger a browser-specific upload window."),Object(o.b)("li",{parentName:"ul"},"Once the user selects the file, the browser-specific select window closes and the files will appear below the File title label.")),Object(o.b)("h3",{id:"error"},"Error"),Object(o.b)("p",null,"Below you have an example of how you can properly show an error using the ",Object(o.b)("strong",{parentName:"p"},"HelperText"),". You can try to submit any file to trigger the error\nand clean the input by canceling the selection to remove the error state."),Object(o.b)(p.a,{mdxType:"ControlledErrorFilePicker"}),Object(o.b)("h2",{id:"playground"},"Playground"),Object(o.b)("p",null,"The example below will demostrate how to create compositions of ",Object(o.b)("inlineCode",{parentName:"p"},"FilePicker")),Object(o.b)(l.b,{__position:2,__code:'<Box maxWidth="100%" width="30rem" mx="auto" p={2}>\n    <FilePicker\n      accept="image/png, image/jpeg"\n      buttonText="Browse files"\n      label="A picture of you"\n      name="avatar"\n      onChange={e => console.log(\'onChange\', e)}\n      onFileChange={(file, e) => console.log(\'onFileChange\', file, e)}\n    />\n    <FilePicker\n      accept="image/png, image/jpeg"\n      buttonText="Browse files"\n      label="A logo you like"\n      name="logo"\n      onChange={e => console.log(\'onChange\', e)}\n      onFileChange={(file, e) => console.log(\'onFileChange\', file, e)}\n      mt={1}\n    />\n    <FilePicker\n      accept="image/png, image/jpeg"\n      buttonText="Browse files"\n      label="This provides a clear description of what the user should upload. Can be multiline"\n      name="logo"\n      onChange={e => console.log(\'onChange\', e)}\n      onFileChange={(file, e) => console.log(\'onFileChange\', file, e)}\n      mt={1}\n    />\n  \n</Playground>',__scope:(t={props:f,DefaultLayout:a.a,Playground:l.b,StyledSystemLinks:i.a,FilePicker:r.a,Button:c.a,Box:s.a,ControlledErrorFilePicker:p.a,FilePickerPropsTable:b.a},t.DefaultLayout=a.a,t._frontmatter=m,t),mdxType:"Playground"},Object(o.b)(s.a,{maxWidth:"100%",width:"30rem",mx:"auto",p:2,mdxType:"Box"},Object(o.b)(r.a,{accept:"image/png, image/jpeg",buttonText:"Browse files",label:"A picture of you",name:"avatar",onChange:function(e){return console.log("onChange",e)},onFileChange:function(e,t){return console.log("onFileChange",e,t)},mdxType:"FilePicker"}),Object(o.b)(r.a,{accept:"image/png, image/jpeg",buttonText:"Browse files",label:"A logo you like",name:"logo",onChange:function(e){return console.log("onChange",e)},onFileChange:function(e,t){return console.log("onFileChange",e,t)},mt:1,mdxType:"FilePicker"}),Object(o.b)(r.a,{accept:"image/png, image/jpeg",buttonText:"Browse files",label:"This provides a clear description of what the user should upload. Can be multiline",name:"logo",onChange:function(e){return console.log("onChange",e)},onFileChange:function(e,t){return console.log("onFileChange",e,t)},mt:1,mdxType:"FilePicker"}))),Object(o.b)("p",null,"In the real world you may need to deal with the ",Object(o.b)("inlineCode",{parentName:"p"},"FilePicker")," within a form that will handle the submission of the file. Below you will find a snippet\nthat can help as example."),Object(o.b)("p",null,Object(o.b)("strong",{parentName:"p"},"Tip:")," The ",Object(o.b)("inlineCode",{parentName:"p"},"FilePicker")," exposes an additional callback of ",Object(o.b)("inlineCode",{parentName:"p"},"onFileChange")," which signature is ",Object(o.b)("inlineCode",{parentName:"p"},"(file, event)"),". The ",Object(o.b)("a",u({parentName:"p"},{href:"https://developer.mozilla.org/es/docs/Web/API/File"}),"File"),"\nand the standard input event. This is a convenient to use ",Object(o.b)("inlineCode",{parentName:"p"},"file")," instead of ",Object(o.b)("inlineCode",{parentName:"p"},"e.target.elements.avatar.files[0]")," check the console while using the example below."),Object(o.b)(l.b,{__position:3,__code:'<Box maxWidth="100%" width="30rem" mx="auto">\n    <form\n      onSubmit={e => {\n        alert(`\n        About to submit ${e.target.elements.avatar.value}.\n        Check console to see the value provided by the Web File API.\n        more at https://developer.mozilla.org/es/docs/Web/API/File\n      `)\n        console.log(e.target.elements.avatar.files[0])\n        e.preventDefault()\n      }}\n    >\n      <Box mb={2}>\n        <FilePicker\n          accept="image/png, image/jpeg"\n          buttonText="Browse files"\n          label="A picture of you"\n          name="avatar"\n          onChange={e => console.log(\'onChange\', e)}\n          onFileChange={(file, e) => console.log(\'onFileChange\', file, e)}\n        />\n      \n      <Button type="submit">Submit</Button>\n    </form>\n  </Box>\n</Playground>',__scope:(n={props:f,DefaultLayout:a.a,Playground:l.b,StyledSystemLinks:i.a,FilePicker:r.a,Button:c.a,Box:s.a,ControlledErrorFilePicker:p.a,FilePickerPropsTable:b.a},n.DefaultLayout=a.a,n._frontmatter=m,n),mdxType:"Playground"},Object(o.b)(s.a,{maxWidth:"100%",width:"30rem",mx:"auto",mdxType:"Box"},Object(o.b)("form",{onSubmit:function(e){alert("\n        About to submit "+e.target.elements.avatar.value+".\n        Check console to see the value provided by the Web File API.\n        more at https://developer.mozilla.org/es/docs/Web/API/File\n      "),console.log(e.target.elements.avatar.files[0]),e.preventDefault()}},Object(o.b)(s.a,{mb:2,mdxType:"Box"},Object(o.b)(r.a,{accept:"image/png, image/jpeg",buttonText:"Browse files",label:"A picture of you",name:"avatar",onChange:function(e){return console.log("onChange",e)},onFileChange:function(e,t){return console.log("onFileChange",e,t)},mdxType:"FilePicker"})),Object(o.b)(c.a,{type:"submit",mdxType:"Button"},"Submit")))))}void 0!==g&&g&&g===Object(g)&&Object.isExtensible(g)&&!g.hasOwnProperty("__filemeta")&&Object.defineProperty(g,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/FilePicker/docs/FilePicker.mdx"}}),g.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-file-picker-docs-file-picker-mdx-55749cbe597333cbdf7b.js.map