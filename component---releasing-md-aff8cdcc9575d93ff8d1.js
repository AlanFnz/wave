(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{ux0G:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return i})),n.d(t,"default",(function(){return c}));n("5hJT"),n("W1QL"),n("K/PF"),n("t91x"),n("75LO"),n("PJhk");var a=n("/FXl"),r=n("TjRS");n("aD51");function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var i={};void 0!==i&&i&&i===Object(i)&&Object.isExtensible(i)&&!i.hasOwnProperty("__filemeta")&&Object.defineProperty(i,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"RELEASING.md"}});var s={_frontmatter:i},l=r.a;function c(e){var t=e.components,n=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,["components"]);return Object(a.b)(l,o({},s,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"release-checklist"},"Release Checklist"),Object(a.b)("ol",null,Object(a.b)("li",{parentName:"ol"},"Check what you are going to release. You can see the commits that happened since the last release with the git command ",Object(a.b)("inlineCode",{parentName:"li"},'git log --pretty="%h - %s (%an)" $(git describe --tags --abbrev=0)..HEAD')),Object(a.b)("li",{parentName:"ol"},"Decide on the correct next version (we follow semver). Bugfixes are patches, features are minor and breaking changes are major version changes."),Object(a.b)("li",{parentName:"ol"},"Read over the ",Object(a.b)("a",o({parentName:"li"},{href:"/docs/release-notes.mdx"}),"release notes"),' and add missing changes (see step 1). Replace the "Unreleased" headline with the new version.'),Object(a.b)("li",{parentName:"ol"},"Let the internal maintainer channel know about the planned release"),Object(a.b)("li",{parentName:"ol"},"Run the ",Object(a.b)("inlineCode",{parentName:"li"},"npm version")," command with the appropriate version"),Object(a.b)("li",{parentName:"ol"},"Push the code changes as well as the git tag to the remote ",Object(a.b)("inlineCode",{parentName:"li"},"git push && git push --tags")),Object(a.b)("li",{parentName:"ol"},"Run the ",Object(a.b)("inlineCode",{parentName:"li"},"npm publish")," command to publish the current state to the distribution repository"),Object(a.b)("li",{parentName:"ol"},"Install the newest version in one of the projects where the library is already used and see if the project encounters any errors"),Object(a.b)("li",{parentName:"ol"},"Notify the #ask-wave channel about the newest release and include the version number, and a link to the release notes.")),Object(a.b)("pre",null,Object(a.b)("code",o({parentName:"pre"},{className:"language-txt"}),":waves: Version x.x.x of @freenow/wave is out\n\nIt contains a new component Label and additional options for the Banner component.\nFind out the details in the release notes!\n\nhttps://wave.free-now.com/release-notes#version-xxx\n")))}void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"RELEASING.md"}}),c.isMDXComponent=!0}}]);
//# sourceMappingURL=component---releasing-md-aff8cdcc9575d93ff8d1.js.map