(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{u67H:function(e,t,n){"use strict";n.r(t),n.d(t,"_frontmatter",(function(){return d})),n.d(t,"default",(function(){return j}));var o=n("Fcif"),a=n("+I+c"),l=(n("mXGw"),n("/FXl")),i=n("TjRS"),r=n("ZFoC"),c=n("xnqT"),p=n("ajo3"),s=n("hWRK"),b=n("jWjX"),u=n("6Wd4"),m=n("6rkh"),h=(n("aD51"),["components"]),d={};void 0!==d&&d&&d===Object(d)&&Object.isExtensible(d)&&!Object.prototype.hasOwnProperty.call(d,"__filemeta")&&Object.defineProperty(d,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/FilePicker/docs/FilePicker.mdx"}});var g={_frontmatter:d},f=i.a;function j(e){var t,n,j=e.components,y=Object(a.a)(e,h);return Object(l.b)(f,Object(o.a)({},g,y,{components:j,mdxType:"MDXLayout"}),Object(l.b)("h1",{id:"filepicker"},"FilePicker"),Object(l.b)("p",null,"This component itâ€™s a trigger opening the native file uploader.\nThis component uses default Web input type file check ",Object(l.b)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file"},"Mozilla Input Docs"),"\nif you need to know more about the supported attributes and values"),Object(l.b)("h2",{id:"properties"},"Properties"),Object(l.b)(m.a,{mdxType:"FilePickerPropsTable"}),Object(l.b)("br",null),Object(l.b)(c.a,{component:"FilePicker",supportedProps:["margin"],mdxType:"StyledSystemLinks"}),Object(l.b)("h2",{id:"appearance"},"Appearance"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"File title"),": This provides a clear description of what the user should upload. If long, takes as many lines as needed extending the height of the component."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Button label"),": Describes the main action, it works better when short"),Object(l.b)("li",{parentName:"ul"},"It is recommended to place this component together with a helper text to provide additional help for what's expected. Helper text should only appear if the user open the file explorer and doesn't select anything.")),Object(l.b)("h2",{id:"placement"},"Placement"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"They are mainly used in forms but can also appear in other places as a stand alone component, like item or user registration screens."),Object(l.b)("li",{parentName:"ul"},"It should be placed with a minimum of 8px ",Object(l.b)("em",{parentName:"li"},'("Spaces" value 1 for our default spaces values)')," margin on each side"),Object(l.b)("li",{parentName:"ul"},"It should be placed vertically aligned")),Object(l.b)("h2",{id:"behaviour"},"Behaviour"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"The user may select 1 file at a time."),Object(l.b)("li",{parentName:"ul"},"By default, any file format is accepted, but you can add parameters to validate a specific file format."),Object(l.b)("li",{parentName:"ul"},"The action of clicking Browse file will trigger a browser-specific upload window."),Object(l.b)("li",{parentName:"ul"},"Once the user selects the file, the browser-specific select window closes and the files will appear below the File title label.")),Object(l.b)("h3",{id:"error"},"Error"),Object(l.b)("p",null,"Below you have an example of how you can properly show an error using the ",Object(l.b)("strong",{parentName:"p"},"HelperText"),". You can try to submit any file to trigger the error\nand clean the input by canceling the selection to remove the error state."),Object(l.b)(u.a,{mdxType:"ControlledErrorFilePicker"}),Object(l.b)("h2",{id:"playground"},"Playground"),Object(l.b)("p",null,"The example below will demostrate how to create compositions of ",Object(l.b)("inlineCode",{parentName:"p"},"FilePicker")),Object(l.b)(r.b,{__position:2,__code:'<Box maxWidth="100%" width="30rem" mx="auto" p={2}>\n  <FilePicker\n    accept="image/png, image/jpeg"\n    buttonText="Browse files"\n    label="A picture of you"\n    name="avatar"\n    onChange={e => console.log(\'onChange\', e)}\n    onFileChange={(file, e) => console.log(\'onFileChange\', file, e)}\n  />\n  <FilePicker\n    accept="image/png, image/jpeg"\n    buttonText="Browse files"\n    label="A logo you like"\n    name="logo"\n    onChange={e => console.log(\'onChange\', e)}\n    onFileChange={(file, e) => console.log(\'onFileChange\', file, e)}\n    alwaysShowActionButton\n    mt={1}\n  />\n  <FilePicker\n    accept="image/png, image/jpeg"\n    buttonText="Browse files"\n    label="This provides a clear description of what the user should upload. Can be multiline"\n    name="logo"\n    onChange={e => console.log(\'onChange\', e)}\n    onFileChange={(file, e) => console.log(\'onFileChange\', file, e)}\n    mt={1}\n  />\n</Box>',__scope:(t={props:y,DefaultLayout:i.a,Playground:r.b,StyledSystemLinks:c.a,FilePicker:p.a,Button:s.a,Box:b.a,ControlledErrorFilePicker:u.a,FilePickerPropsTable:m.a},t.DefaultLayout=i.a,t._frontmatter=d,t),mdxType:"Playground"},Object(l.b)(b.a,{maxWidth:"100%",width:"30rem",mx:"auto",p:2,mdxType:"Box"},Object(l.b)(p.a,{accept:"image/png, image/jpeg",buttonText:"Browse files",label:"A picture of you",name:"avatar",onChange:function(e){return console.log("onChange",e)},onFileChange:function(e,t){return console.log("onFileChange",e,t)},mdxType:"FilePicker"}),Object(l.b)(p.a,{accept:"image/png, image/jpeg",buttonText:"Browse files",label:"A logo you like",name:"logo",onChange:function(e){return console.log("onChange",e)},onFileChange:function(e,t){return console.log("onFileChange",e,t)},alwaysShowActionButton:!0,mt:1,mdxType:"FilePicker"}),Object(l.b)(p.a,{accept:"image/png, image/jpeg",buttonText:"Browse files",label:"This provides a clear description of what the user should upload. Can be multiline",name:"logo",onChange:function(e){return console.log("onChange",e)},onFileChange:function(e,t){return console.log("onFileChange",e,t)},mt:1,mdxType:"FilePicker"}))),Object(l.b)("p",null,"In the real world you may need to deal with the ",Object(l.b)("inlineCode",{parentName:"p"},"FilePicker")," within a form that will handle the submission of the file. Below you will find a snippet\nthat can help as example."),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Tip:")," The ",Object(l.b)("inlineCode",{parentName:"p"},"FilePicker")," exposes an additional callback of ",Object(l.b)("inlineCode",{parentName:"p"},"onFileChange")," which signature is ",Object(l.b)("inlineCode",{parentName:"p"},"(file, event)"),". The ",Object(l.b)("a",{parentName:"p",href:"https://developer.mozilla.org/es/docs/Web/API/File"},"File"),"\nand the standard input event. This is a convenient to use ",Object(l.b)("inlineCode",{parentName:"p"},"file")," instead of ",Object(l.b)("inlineCode",{parentName:"p"},"e.target.elements.avatar.files[0]")," check the console while using the example below."),Object(l.b)(r.b,{__position:3,__code:'<Box maxWidth="100%" width="30rem" mx="auto">\n  <form\n    onSubmit={e => {\n      alert(`\n      About to submit ${e.target.elements.avatar.value}.\n      Check console to see the value provided by the Web File API.\n      more at https://developer.mozilla.org/es/docs/Web/API/File\n    `)\n      console.log(e.target.elements.avatar.files[0])\n      e.preventDefault()\n    }}\n  >\n    <Box mb={2}>\n      <FilePicker\n        accept="image/png, image/jpeg"\n        buttonText="Browse files"\n        label="A picture of you"\n        name="avatar"\n        onChange={e => console.log(\'onChange\', e)}\n        onFileChange={(file, e) => console.log(\'onFileChange\', file, e)}\n      />\n    </Box>\n    <Button type="submit">Submit</Button>\n  </form>\n</Box>',__scope:(n={props:y,DefaultLayout:i.a,Playground:r.b,StyledSystemLinks:c.a,FilePicker:p.a,Button:s.a,Box:b.a,ControlledErrorFilePicker:u.a,FilePickerPropsTable:m.a},n.DefaultLayout=i.a,n._frontmatter=d,n),mdxType:"Playground"},Object(l.b)(b.a,{maxWidth:"100%",width:"30rem",mx:"auto",mdxType:"Box"},Object(l.b)("form",{onSubmit:function(e){alert("\n        About to submit "+e.target.elements.avatar.value+".\n        Check console to see the value provided by the Web File API.\n        more at https://developer.mozilla.org/es/docs/Web/API/File\n      "),console.log(e.target.elements.avatar.files[0]),e.preventDefault()}},Object(l.b)(b.a,{mb:2,mdxType:"Box"},Object(l.b)(p.a,{accept:"image/png, image/jpeg",buttonText:"Browse files",label:"A picture of you",name:"avatar",onChange:function(e){return console.log("onChange",e)},onFileChange:function(e,t){return console.log("onFileChange",e,t)},mdxType:"FilePicker"})),Object(l.b)(s.a,{type:"submit",mdxType:"Button"},"Submit")))))}void 0!==j&&j&&j===Object(j)&&Object.isExtensible(j)&&!Object.prototype.hasOwnProperty.call(j,"__filemeta")&&Object.defineProperty(j,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/FilePicker/docs/FilePicker.mdx"}}),j.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-file-picker-docs-file-picker-mdx-2b997c218d2ba4d5c5f3.js.map