(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{coPj:function(e,t,s){"use strict";s.r(t),s.d(t,"_frontmatter",(function(){return u})),s.d(t,"default",(function(){return j}));var a=s("Fcif"),o=s("+I+c"),n=(s("mXGw"),s("/FXl")),r=s("TjRS"),l=s("ZFoC"),d=s("/VS8"),i=s("a7L+"),b=s("VuFt"),c=s("jWjX"),p=s("YhlO"),w=(s("aD51"),["components"]),u={};void 0!==u&&u&&u===Object(u)&&Object.isExtensible(u)&&!Object.prototype.hasOwnProperty.call(u,"__filemeta")&&Object.defineProperty(u,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/Password/docs/Password.mdx"}});var m={_frontmatter:u},h=r.a;function j(e){var t,s=e.components,j=Object(o.a)(e,w);return Object(n.b)(h,Object(a.a)({},m,j,{components:s,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"password"},"Password"),Object(n.b)("p",null,"The component to ask for a password or set a password."),Object(n.b)("p",null,"It has two modes a user can toggle between with a button:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"hidden")," — the password is hidden"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"shown")," — the password is shown as plain text")),Object(n.b)("h2",{id:"use-cases"},"Use cases"),Object(n.b)("h3",{id:"login"},"Login"),Object(n.b)("p",null,"By default, ",Object(n.b)("inlineCode",{parentName:"p"},"<Password />")," has the settings to be used for login screen or any case when a user\nmust provide the existing password."),Object(n.b)("p",null,"In that case the browser, or the password manager will recognise the password field and will offer autocomplete."),Object(n.b)("h3",{id:"sign-up-or-reset-password"},"Sign up or reset password"),Object(n.b)("p",null,"If you are in the situation when a user needs to create a new password, set ",Object(n.b)("inlineCode",{parentName:"p"},"purpose")," prop to ",Object(n.b)("inlineCode",{parentName:"p"},"new-password"),":"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-jsx"},'<Password purpose="new-password" label="New password" />\n')),Object(n.b)("p",null,"This will allow password managers to generate a password for the user automatically."),Object(n.b)("h2",{id:"properties"},"Properties"),Object(n.b)(b.a,{mdxType:"PasswordPropsTable"}),Object(n.b)("h2",{id:"example"},"Example"),Object(n.b)(l.b,{__position:1,__code:'<div>\n  <ControlledPassword label="Password" />\n</div>\n<div>\n  <ControlledPassword label="Password" width="100%" my={2} />\n</div>\n\n<Box display="flex" flexDirection="column">\n  <ControlledPassword label="Password" />\n  <ControlledPassword label="Password" width="100%" my={2} />\n</Box>',__scope:(t={props:j,DefaultLayout:r.a,Playground:l.b,Combination:d.a,ControlledPassword:i.a,PasswordPropsTable:b.a,Box:c.a,Video:p.a},t.DefaultLayout=r.a,t._frontmatter=u,t),mdxType:"Playground"},Object(n.b)("div",null,Object(n.b)(i.a,{label:"Password",mdxType:"ControlledPassword"})),Object(n.b)("div",null,Object(n.b)(i.a,{label:"Password",width:"100%",my:2,mdxType:"ControlledPassword"})),Object(n.b)(c.a,{display:"flex",flexDirection:"column",mdxType:"Box"},Object(n.b)(i.a,{label:"Password",mdxType:"ControlledPassword"}),Object(n.b)(i.a,{label:"Password",width:"100%",my:2,mdxType:"ControlledPassword"}))),Object(n.b)("h2",{id:"accessibility"},"Accessibility"),Object(n.b)("p",null,"The component is done with accessibility in mind and has built-in English aria labels for the button and the component state."),Object(n.b)("p",null,'When screen reader user clicks the toggle mode button, the screen reader announces the new state "Your password is hidden/shown":'),Object(n.b)(p.a,{src:"/public/password/a11y.mp4",mdxType:"Video"}),Object(n.b)("p",null,"If you project supports multiple languages it is recommended to pass translated labels to the component:"),Object(n.b)("pre",null,Object(n.b)("code",{parentName:"pre",className:"language-jsx"},"<Password label=\"Password\" aria={{\n    showPasswordButton: 'Show password',\n    hidePasswordButton: 'Hide password',\n    messagePasswordIsHidden: 'Your password is hidden',\n    messagePasswordIsShown: 'Your password is shown'\n}}/>\n")),Object(n.b)("p",null,"The keys to set are:"),Object(n.b)("ul",null,Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"showPasswordButton")," - the label of the button when the password is hidden"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"hidePasswordButton")," - the label of the button when the password is shown"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"messagePasswordIsHidden")," - the message to announce the state of the component after the password value is hidden"),Object(n.b)("li",{parentName:"ul"},Object(n.b)("inlineCode",{parentName:"li"},"messagePasswordIsShown")," - the message to announce the state of the component after the password value is shown")),Object(n.b)("h2",{id:"combinations"},"Combinations"),Object(n.b)(d.a,{variant:["boxed","bottom-lined"],size:["medium","small"],disabled:[!1,!0],inverted:[!1,!0],error:[!1,!0],mdxType:"Combination"},(function(e,t){return Object(n.b)(i.a,Object(a.a)({key:t},e,{label:"Password",value:"my-password",mdxType:"ControlledPassword"}))})))}void 0!==j&&j&&j===Object(j)&&Object.isExtensible(j)&&!Object.prototype.hasOwnProperty.call(j,"__filemeta")&&Object.defineProperty(j,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/Password/docs/Password.mdx"}}),j.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-password-docs-password-mdx-551b3edd0bb94a9bf841.js.map