{"version":3,"sources":["webpack:///../src/components/Table/docs/Table.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","component","supportedProps","parentName","style","maxWidth","overflowX","isMDXComponent"],"mappings":"qkBAYO,IAAMA,EAAe,Q,qNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAI5E,iBAAQ,CACN,GAAM,SADR,SAGA,0KACA,iBAAQ,CACN,GAAM,cADR,cAGA,iBAAQ,CACN,GAAM,WADR,SAGA,YAAC,IAAD,CAAiBA,QAAQ,oBACzB,uBACA,YAAC,IAAD,CAAmBC,UAAU,QAAQC,eAAgB,CAAC,SAAU,QAAS,UAAWF,QAAQ,sBAC5F,uBACA,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAoBA,QAAQ,uBAC5B,uBACA,iBAAQ,CACN,GAAM,mBADR,mBAGA,YAAC,IAAD,CAAmBC,UAAU,kBAAkBC,eAAgB,CAAC,YAAa,UAAWF,QAAQ,sBAChG,uBACA,iBAAQ,CACN,GAAM,aADR,aAGA,YAAC,IAAD,CAAmBC,UAAU,YAAYC,eAAgB,CAAC,YAAa,UAAWF,QAAQ,sBAC1F,uBACA,iBAAQ,CACN,GAAM,oBADR,oBAGA,YAAC,IAAD,CAA4BA,QAAQ,+BACpC,uBACA,iBAAQ,CACN,GAAM,YADR,YAGA,YAAC,IAAD,CAAWA,QAAQ,cACnB,uBAAK,sBAAMG,WAAW,OAAU,CAC5B,UAAa,iBADZ,41BA0BL,8BACE,iBAAGA,WAAW,cAAd,mEAA+F,0BAAYA,WAAW,KAAvB,eAA/F,WAAkK,0BAAYA,WAAW,KAAvB,SAAlK,kIAC8G,mBAAGA,WAAW,KAAQ,CAChI,KAAQ,4CADkG,6CAIhH,iBAAQ,CACN,GAAM,cADR,cAGA,kFAAiE,0BAAYA,WAAW,KAAvB,UAAjE,mBAAuI,0BAAYA,WAAW,KAAvB,YAAvI,kFAEA,YAAC,IAAD,CAAgBH,QAAQ,mBACxB,uBAAK,sBAAMG,WAAW,OAAU,CAC5B,UAAa,iBADZ,6QAUL,iBAAQ,CACN,GAAM,gBADR,gBAGA,qNAEA,mBAAKC,MAAO,CACVC,SAAU,OACVC,UAAW,SAEb,YAAC,IAAD,CAAkBN,QAAQ,sBAE1B,iBAAQ,CACN,GAAM,iBADR,iBAGA,YAAC,IAAD,CAAeA,QAAQ,kBACvB,uBAAK,sBAAMG,WAAW,OAAU,CAC5B,UAAa,iBADZ,2vBAkBL,8BACE,iBAAGA,WAAW,cAAd,wBAAoD,0BAAYA,WAAW,KAAvB,cAApD,WAAsH,0BAAYA,WAAW,KAAvB,UAAtH,4EAAqP,0BAAYA,WAAW,KAAvB,SAArP,8DACoD,0BAAYA,WAAW,KAAvB,cADpD,6HAEmD,mBAAGA,WAAW,KAAQ,CACrE,KAAQ,4CADuC,mD,mNAQzDN,EAAWU,gBAAiB","file":"component---src-components-table-docs-table-mdx-30b5d48ec1716b14cc99.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/wave/wave/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { LiveTable } from './LiveTable';\nimport { ActiveRowTable } from './ActiveRowTable';\nimport { ComplexDataTable } from './ComplexDataTable';\nimport { SkeletonTable } from './SkeletonTable';\nimport { TablePropsTable, TableRowPropsTable, TableRowSkeletonPropsTable } from './TablePropsTable';\nimport { StyledSystemLinks } from '../../../docs/StyledSystemLinks';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"table\"\n    }}>{`Table`}</h1>\n    <p>{`Tables are used to render tabular data in a basic grid, making it easier for people to scan it. Tables are comprised of cells, columns, and rows.`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <h3 {...{\n      \"id\": \"table-1\"\n    }}>{`Table`}</h3>\n    <TablePropsTable mdxType=\"TablePropsTable\" />\n    <br />\n    <StyledSystemLinks component=\"Table\" supportedProps={['margin', 'width', 'height']} mdxType=\"StyledSystemLinks\" />\n    <br />\n    <h3 {...{\n      \"id\": \"tablerow\"\n    }}>{`TableRow`}</h3>\n    <TableRowPropsTable mdxType=\"TableRowPropsTable\" />\n    <br />\n    <h3 {...{\n      \"id\": \"tableheadercell\"\n    }}>{`TableHeaderCell`}</h3>\n    <StyledSystemLinks component=\"TableHeaderCell\" supportedProps={['textAlign', 'layout']} mdxType=\"StyledSystemLinks\" />\n    <br />\n    <h3 {...{\n      \"id\": \"tablecell\"\n    }}>{`TableCell`}</h3>\n    <StyledSystemLinks component=\"TableCell\" supportedProps={['textAlign', 'layout']} mdxType=\"StyledSystemLinks\" />\n    <br />\n    <h3 {...{\n      \"id\": \"tablerowskeleton\"\n    }}>{`TableRowSkeleton`}</h3>\n    <TableRowSkeletonPropsTable mdxType=\"TableRowSkeletonPropsTable\" />\n    <br />\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <LiveTable mdxType=\"LiveTable\" />\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Table rowStyle=\"zebra\">\n    <caption style={{ captionSide: 'bottom', padding: '1rem' }}>The wonderful Wave list</caption>\n    <thead>\n        <TableRow>\n            <TableHeaderCell scope=\"col\">Name</TableHeaderCell>\n            <TableHeaderCell scope=\"col\">E-Mail</TableHeaderCell>\n        </TableRow>\n    </thead>\n    <tbody>\n        <TableRow>\n            <TableCell scope=\"row\">Luka Hartwig</TableCell>\n            <TableCell>l.hartwig@mytaxi.com</TableCell>\n        </TableRow>\n        <TableRow>\n            <TableCell scope=\"row\">Alba Gonzales</TableCell>\n            <TableCell>alba.gonzales@free-now.com</TableCell>\n        </TableRow>\n        <TableRow>\n            <TableCell scope=\"row\">Alexis Duran</TableCell>\n            <TableCell>alexis.duran@free-now.com</TableCell>\n        </TableRow>\n    </tbody>\n</Table>\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Tables are not width 100% by default, if required, you must set `}<inlineCode parentName=\"p\">{`width: 100%`}</inlineCode>{` to the `}<inlineCode parentName=\"p\">{`Table`}</inlineCode>{` Component.\nTo better understand some of the props in the above table, an in-depth guide of accessible tables can be found at `}<a parentName=\"p\" {...{\n          \"href\": \"https://a11y-101.com/development/tables\"\n        }}>{`https://a11y-101.com/development/tables`}</a></p>\n    </blockquote>\n    <h2 {...{\n      \"id\": \"active-row\"\n    }}>{`Active Row`}</h2>\n    <p>{`To highlight an active (or selected) row, you can add set `}<inlineCode parentName=\"p\">{`active`}</inlineCode>{` to true on the `}<inlineCode parentName=\"p\">{`TableRow`}</inlineCode>{` component. This will mark\nthe row as active and change the background color.`}</p>\n    <ActiveRowTable mdxType=\"ActiveRowTable\" />\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<TableRow active={true}>\n    <TableCell><Checkbox checked={true} /></TableCell>\n    <TableCell>Alex Ponomarenko</TableCell>\n    <TableCell>a.ponomarenko@mytaxi.com</TableCell>\n    <TableCell>Booker</TableCell>\n    <TableCell>Product</TableCell>\n</TableRow>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"complex-data\"\n    }}>{`Complex Data`}</h2>\n    <p>{`When dealing with complex data, it is possible to use up to two lines of text in one row. Keep in mind, that the smallest row size\nwill not work when you have multiple lines in one cells.`}</p>\n    <div style={{\n      maxWidth: '100%',\n      overflowX: 'auto'\n    }}>\n    <ComplexDataTable mdxType=\"ComplexDataTable\" />\n    </div>\n    <h2 {...{\n      \"id\": \"loading-state\"\n    }}>{`Loading State`}</h2>\n    <SkeletonTable mdxType=\"SkeletonTable\" />\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Table rowStyle=\"zebra\">\n    <thead>\n        <TableRow>\n            <TableHeaderCell style={{ width: '10rem', whiteSpace: 'normal' }}>Creation Date / Activity</TableHeaderCell>\n            <TableHeaderCell style={{ width: '6.5rem' }}>Name</TableHeaderCell>\n            <TableHeaderCell style={{ width: '3rem' }}>Status</TableHeaderCell>\n            <TableHeaderCell style={{ width: '7.5rem' }}>Phone</TableHeaderCell>\n            <TableHeaderCell style={{ width: '13rem' }}>E-Mail</TableHeaderCell>\n            <TableHeaderCell style={{ width: '6.5rem' }}>Actions</TableHeaderCell>\n        </TableRow>\n    </thead>\n    <tbody>\n        {loading && [0, 1, 2, 3, 4].map(key => <TableRowSkeleton key={key} columns={6} />)}\n    </tbody>\n</Table>\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`By default cells has `}<inlineCode parentName=\"p\">{`whiteSpace`}</inlineCode>{` set to `}<inlineCode parentName=\"p\">{`nowrap`}</inlineCode>{` which will make cells expand depending on the content instead the given `}<inlineCode parentName=\"p\">{`width`}</inlineCode>{`.\nIf you really want to fix a width make sure to override `}<inlineCode parentName=\"p\">{`whiteSpace`}</inlineCode>{` property too. On top of that make sure to check your table a11y.\nAn in-depth guide of accessible tables can be found at `}<a parentName=\"p\" {...{\n          \"href\": \"https://a11y-101.com/development/tables\"\n        }}>{`https://a11y-101.com/development/tables`}</a></p>\n    </blockquote>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}