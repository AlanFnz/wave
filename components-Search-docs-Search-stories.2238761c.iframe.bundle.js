"use strict";(self.webpackChunk_freenow_wave=self.webpackChunk_freenow_wave||[]).push([[39409],{"./src/components/Search/docs/Search.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,Disabled:()=>Disabled,WithAPI:()=>WithAPI,WithPlaceholder:()=>WithPlaceholder,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_Search__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/components/Search/Search.tsx"),_Box_Box__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./src/components/Box/Box.tsx"),_Text_Text__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./src/components/Text/Text.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"Components/Search",component:_Search__WEBPACK_IMPORTED_MODULE_1__.o,args:{results:["Adam","Barry","Charles","David"]}},Default={},WithPlaceholder={args:{placeholder:"Search by name"}},Disabled={args:{disabled:!0}},WithAPI={args:{width:"20rem",placeholder:"Enter a name"},parameters:{},argTypes:{results:{table:{disable:!0}}},render:args=>{const[results,setResults]=(0,react__WEBPACK_IMPORTED_MODULE_0__.useState)([]),mapName=({name},index)=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_Box_Box__WEBPACK_IMPORTED_MODULE_2__.x,{height:"2.5rem",display:"flex",alignItems:"center",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_Text_Text__WEBPACK_IMPORTED_MODULE_3__.x,{marginLeft:"1rem",children:name})},`${name}-${index}`);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__.jsx)(_Search__WEBPACK_IMPORTED_MODULE_1__.o,{...args,results,onInputChange:name=>(async name=>{const response=await(await fetch(`https://swapi.dev/api/people/?search=${name}`)).json();setResults(response.results?.map(mapName))})(name),onClear:()=>setResults([])})}};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{}",...Default.parameters?.docs?.source}}},WithPlaceholder.parameters={...WithPlaceholder.parameters,docs:{...WithPlaceholder.parameters?.docs,source:{originalSource:"{\n  args: {\n    placeholder: 'Search by name'\n  }\n}",...WithPlaceholder.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"{\n  args: {\n    disabled: true\n  }\n}",...Disabled.parameters?.docs?.source}}},WithAPI.parameters={...WithAPI.parameters,docs:{...WithAPI.parameters?.docs,source:{originalSource:'{\n  args: {\n    width: \'20rem\',\n    placeholder: \'Enter a name\'\n  },\n  parameters: {},\n  argTypes: {\n    results: {\n      table: {\n        disable: true\n      }\n    }\n  },\n  render: args => {\n    const [results, setResults] = useState<JSX.Element[]>([]);\n    const mapName = ({\n      name\n    }: {\n      name: string;\n    }, index: number) => <Box key={`${name}-${index}`} height="2.5rem" display="flex" alignItems="center">\n                <Text marginLeft="1rem">{name}</Text>\n            </Box>;\n    const fetchCharacter = async (name: string) => {\n      const response: {\n        results: {\n          name: string;\n        }[];\n      } = await (await fetch(`https://swapi.dev/api/people/?search=${name}`)).json();\n      setResults(response.results?.map(mapName));\n    };\n    return <Search {...args} results={results} onInputChange={name => fetchCharacter(name)} onClear={() => setResults([])} />;\n  }\n}',...WithAPI.parameters?.docs?.source}}};const __namedExportsOrder=["Default","WithPlaceholder","Disabled","WithAPI"]},"./node_modules/warning/warning.js":module=>{var warning=function(){};module.exports=warning}}]);