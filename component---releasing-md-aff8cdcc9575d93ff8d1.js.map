{"version":3,"sources":["webpack:///../RELEASING.md"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"weAMO,IAAMA,EAAe,Q,8LAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,qBADR,qBAGA,sBACE,kBAAIC,WAAW,MAAf,0HAA+I,0BAAYA,WAAW,MAAvB,6EAC/I,kBAAIA,WAAW,MAAf,mJACA,kBAAIA,WAAW,MAAf,iBAAsC,mBAAGA,WAAW,MAAS,CACzD,KAAQ,4BAD0B,iBAAtC,kGAGA,kBAAIA,WAAW,MAAf,sEACA,kBAAIA,WAAW,MAAf,WAAgC,0BAAYA,WAAW,MAAvB,eAAhC,yCACA,kBAAIA,WAAW,MAAf,8DAAmF,0BAAYA,WAAW,MAAvB,gCACnF,kBAAIA,WAAW,MAAf,WAAgC,0BAAYA,WAAW,MAAvB,eAAhC,wEACA,kBAAIA,WAAW,MAAf,oIACA,kBAAIA,WAAW,MAAf,2HAEF,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,mP,4LAaTJ,EAAWK,gBAAiB","file":"component---releasing-md-aff8cdcc9575d93ff8d1.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/wave/wave/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"release-checklist\"\n    }}>{`Release Checklist`}</h1>\n    <ol>\n      <li parentName=\"ol\">{`Check what you are going to release. You can see the commits that happened since the last release with the git command `}<inlineCode parentName=\"li\">{`git log --pretty=\"%h - %s (%an)\" $(git describe --tags --abbrev=0)..HEAD`}</inlineCode></li>\n      <li parentName=\"ol\">{`Decide on the correct next version (we follow semver). Bugfixes are patches, features are minor and breaking changes are major version changes.`}</li>\n      <li parentName=\"ol\">{`Read over the `}<a parentName=\"li\" {...{\n          \"href\": \"/docs/release-notes.mdx\"\n        }}>{`release notes`}</a>{` and add missing changes (see step 1). Replace the \"Unreleased\" headline with the new version.`}</li>\n      <li parentName=\"ol\">{`Let the internal maintainer channel know about the planned release`}</li>\n      <li parentName=\"ol\">{`Run the `}<inlineCode parentName=\"li\">{`npm version`}</inlineCode>{` command with the appropriate version`}</li>\n      <li parentName=\"ol\">{`Push the code changes as well as the git tag to the remote `}<inlineCode parentName=\"li\">{`git push && git push --tags`}</inlineCode></li>\n      <li parentName=\"ol\">{`Run the `}<inlineCode parentName=\"li\">{`npm publish`}</inlineCode>{` command to publish the current state to the distribution repository`}</li>\n      <li parentName=\"ol\">{`Install the newest version in one of the projects where the library is already used and see if the project encounters any errors`}</li>\n      <li parentName=\"ol\">{`Notify the #ask-wave channel about the newest release and include the version number, and a link to the release notes.`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-txt\"\n      }}>{`:waves: Version x.x.x of @freenow/wave is out\n\nIt contains a new component Label and additional options for the Banner component.\nFind out the details in the release notes!\n\nhttps://wave.free-now.com/release-notes#version-xxx\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}