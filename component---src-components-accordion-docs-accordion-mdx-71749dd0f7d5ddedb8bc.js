(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{J3y1:function(e,o,n){"use strict";n.r(o),n.d(o,"_frontmatter",(function(){return m})),n.d(o,"default",(function(){return j}));var a=n("Fcif"),c=n("+I+c"),t=(n("mXGw"),n("/FXl")),i=n("TjRS"),d=n("ZFoC"),r=n("jWjX"),s=n("ZsgQ"),p=n("p3C5"),l=n("YGtE"),b=(n("aD51"),["components"]),m={};void 0!==m&&m&&m===Object(m)&&Object.isExtensible(m)&&!Object.prototype.hasOwnProperty.call(m,"__filemeta")&&Object.defineProperty(m,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"src/components/Accordion/docs/Accordion.mdx"}});var u={_frontmatter:m},h=i.a;function j(e){var o,n,j=e.components,O=Object(c.a)(e,b);return Object(t.b)(h,Object(a.a)({},u,O,{components:j,mdxType:"MDXLayout"}),Object(t.b)("h1",{id:"accordion"},"Accordion"),Object(t.b)("p",null,"Accordion component is use to display large amount of content in a compress and progressive way."),Object(t.b)("h2",{id:"examples"},"Examples"),Object(t.b)("h3",{id:"default"},"Default"),Object(t.b)(d.b,{__position:0,__code:'<Box>\n  <Accordion\n    heading="some header"\n    description="Description"\n    buttonLabel="Button"\n    info="Secondary info"\n  >\n    <div>This is just a placeholder</div>\n  </Accordion>\n  <Accordion heading="some header" defaultExpanded>\n    <div>This is just a placeholder</div>\n  </Accordion>\n</Box>',__scope:(o={props:O,DefaultLayout:i.a,Playground:d.b,Box:r.a,Accordion:s.a,AccordionPropsTable:p.a,OnExpandExample:l.a},o.DefaultLayout=i.a,o._frontmatter=m,o),mdxType:"Playground"},Object(t.b)(r.a,{mdxType:"Box"},Object(t.b)(s.a,{heading:"some header",description:"Description",buttonLabel:"Button",info:"Secondary info",mdxType:"Accordion"},Object(t.b)("div",null,"This is just a placeholder")),Object(t.b)(s.a,{heading:"some header",defaultExpanded:!0,mdxType:"Accordion"},Object(t.b)("div",null,"This is just a placeholder")))),Object(t.b)("h3",{id:"compact"},"Compact"),Object(t.b)(d.b,{__position:1,__code:'<Box>\n  <Accordion\n    heading="some header"\n    description="Description"\n    variant="compact"\n  >\n    <div>This is just a placeholder</div>\n  </Accordion>\n  <Accordion heading="some header" variant="compact">\n    <div>This is just a placeholder</div>\n  </Accordion>\n  <Accordion heading="some header" variant="compact">\n    <div>This is just a placeholder</div>\n  </Accordion>\n</Box>',__scope:(n={props:O,DefaultLayout:i.a,Playground:d.b,Box:r.a,Accordion:s.a,AccordionPropsTable:p.a,OnExpandExample:l.a},n.DefaultLayout=i.a,n._frontmatter=m,n),mdxType:"Playground"},Object(t.b)(r.a,{mdxType:"Box"},Object(t.b)(s.a,{heading:"some header",description:"Description",variant:"compact",mdxType:"Accordion"},Object(t.b)("div",null,"This is just a placeholder")),Object(t.b)(s.a,{heading:"some header",variant:"compact",mdxType:"Accordion"},Object(t.b)("div",null,"This is just a placeholder")),Object(t.b)(s.a,{heading:"some header",variant:"compact",mdxType:"Accordion"},Object(t.b)("div",null,"This is just a placeholder")))),Object(t.b)("h3",{id:"onexpand--oncollapse"},"onExpand / onCollapse"),Object(t.b)(l.a,{mdxType:"OnExpandExample"}),Object(t.b)("pre",null,Object(t.b)("code",{parentName:"pre",className:"language-jsx"},"const OnExpandExample = () => {\n    const [label, setLabel] = useState('Close')\n\n    return (\n        <Accordion heading=\"some header\" description=\"Description\" buttonLabel={label} info=\"Secondary info\" onExpand={() => setLabel('Open')} onCollapse={() => setLabel('Close')} >\n            <div>\n                This is just a placeholder\n            </div>\n        </Accordion>\n    )\n}\n")),Object(t.b)("h2",{id:"api"},"API"),Object(t.b)(p.a,{mdxType:"AccordionPropsTable"}))}void 0!==j&&j&&j===Object(j)&&Object.isExtensible(j)&&!Object.prototype.hasOwnProperty.call(j,"__filemeta")&&Object.defineProperty(j,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"src/components/Accordion/docs/Accordion.mdx"}}),j.isMDXComponent=!0}}]);
//# sourceMappingURL=component---src-components-accordion-docs-accordion-mdx-71749dd0f7d5ddedb8bc.js.map