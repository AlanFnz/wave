{"version":3,"sources":["webpack:///../src/components/Skeleton/docs/Skeleton.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","component","supportedProps","__position","__code","__scope","Playground","Skeleton","SkeletonPropsTable","StyledSystemLinks","Combination","width","animated","i","key","isMDXComponent"],"mappings":"mVAWaA,EAAe,QAAG,iPAC/B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAW,GAGhC,MAFDC,EAAU,EAAVA,WACGC,EAAK,iBAER,OAAO,YAACJ,EAAS,eAAKD,EAAiBK,EAAK,CAAED,WAAYA,EAAYE,QAAQ,cAI5E,kBACE,GAAM,YAAU,YAElB,kIACA,kBACE,GAAM,cAAY,cAEpB,YAAC,IAAkB,CAACA,QAAQ,uBAAuB,uBACnD,YAAC,IAAiB,CAACC,UAAU,WAAWC,eAAgB,CAAC,SAAU,SAAU,gBAAiBF,QAAQ,sBACtG,kBACE,GAAM,YAAU,YAElB,YAAC,IAAU,CAACG,WAAY,EAAGC,OAAQ,sCAAyCC,SAAO,GACjFN,QACAH,kBACAU,eACAC,aACAC,uBACAC,sBACAC,iBAAW,gBACXd,IAAa,EACbH,eAAY,GACXO,QAAQ,cACX,YAAC,IAAQ,CAACW,MAAM,QAAQC,UAAQ,EAACZ,QAAQ,cAEzC,kBACE,GAAM,gBAAc,gBAEtB,YAAC,IAAW,CAACY,SAAU,EAAC,GAAO,GAAOZ,QAAQ,gBAC7C,SAACD,EAAOc,GAAC,OAAK,YAAC,IAAQ,aAACC,IAAKD,GAAOd,EAAK,CAAEC,QAAQ,uBAIvD,+OAEDH,EAAWkB,gBAAiB","file":"component---src-components-skeleton-docs-skeleton-mdx-2b15b43897f48ae1cb47.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\nimport DefaultLayout from \"/home/runner/work/wave/wave/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground } from 'docz';\nimport { Skeleton } from '../Skeleton';\nimport { SkeletonPropsTable } from './SkeletonPropsTable';\nimport { StyledSystemLinks } from '../../../docs/StyledSystemLinks';\nimport { Combination } from '../../../docs/Combination';\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"skeleton\"\n    }}>{`Skeleton`}</h1>\n    <p>{`Provide a placeholder while you wait for content to load, or to visualise content that doesn't exist yet.`}</p>\n    <h2 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h2>\n    <SkeletonPropsTable mdxType=\"SkeletonPropsTable\" /><br />\n    <StyledSystemLinks component=\"Skeleton\" supportedProps={['layout', 'margin', 'borderRadius']} mdxType=\"StyledSystemLinks\" />\n    <h2 {...{\n      \"id\": \"examples\"\n    }}>{`Examples`}</h2>\n    <Playground __position={2} __code={'<Skeleton width=\\\"200px\\\" animated />'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Skeleton,\n      SkeletonPropsTable,\n      StyledSystemLinks,\n      Combination,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n    <Skeleton width=\"200px\" animated mdxType=\"Skeleton\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"combinations\"\n    }}>{`Combinations`}</h2>\n    <Combination animated={[false, true]} mdxType=\"Combination\">\n    {(props, i) => <Skeleton key={i} {...props} mdxType=\"Skeleton\" />}\n    </Combination>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}